// <auto-generated />
using System;
using ChristmasShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChristmasShop.Migrations
{
    [DbContext(typeof(AppDBContent))]
    [Migration("20220503134034_Account")]
    partial class Account
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ChristmasShop.Data.Models.CategoryTree", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("categoryName");

                    b.Property<string>("desc");

                    b.HasKey("id");

                    b.ToTable("CategoryTree");
                });

            modelBuilder.Entity("ChristmasShop.Data.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(35);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<DateTime>("orderTime");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ChristmasShop.Data.Models.OrderDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TreeID");

                    b.Property<int>("orderID");

                    b.Property<long>("price");

                    b.HasKey("id");

                    b.HasIndex("TreeID");

                    b.HasIndex("orderID");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("ChristmasShop.Data.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Role");

                    b.HasData(
                        new { ID = 1, Name = "admin" },
                        new { ID = 2, Name = "user" }
                    );
                });

            modelBuilder.Entity("ChristmasShop.Data.Models.ShopCartItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ShopCartId");

                    b.Property<int>("price");

                    b.Property<int?>("treeid");

                    b.HasKey("id");

                    b.HasIndex("treeid");

                    b.ToTable("ShopCartItem");
                });

            modelBuilder.Entity("ChristmasShop.Data.Models.Tree", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryTreeid");

                    b.Property<int>("categoryID");

                    b.Property<string>("img");

                    b.Property<bool>("isAvailable");

                    b.Property<bool>("isFavourite");

                    b.Property<string>("longDesc");

                    b.Property<string>("name");

                    b.Property<int>("price");

                    b.Property<string>("shortDesc");

                    b.HasKey("id");

                    b.HasIndex("CategoryTreeid");

                    b.ToTable("Tree");
                });

            modelBuilder.Entity("ChristmasShop.Data.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<int?>("RoleId");

                    b.Property<bool>("Unblocked");

                    b.Property<byte[]>("salt");

                    b.HasKey("ID");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new { ID = 1, Email = "admin", Password = "60Q8tiQFTYW0lTgCTcOLYw==", RoleId = 1, Unblocked = true, salt = new byte[] { 161, 106, 144, 182, 180, 100, 41, 60 } }
                    );
                });

            modelBuilder.Entity("ChristmasShop.Data.Models.OrderDetail", b =>
                {
                    b.HasOne("ChristmasShop.Data.Models.Tree", "tree")
                        .WithMany()
                        .HasForeignKey("TreeID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ChristmasShop.Data.Models.Order", "order")
                        .WithMany("orderDetails")
                        .HasForeignKey("orderID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ChristmasShop.Data.Models.ShopCartItem", b =>
                {
                    b.HasOne("ChristmasShop.Data.Models.Tree", "tree")
                        .WithMany()
                        .HasForeignKey("treeid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ChristmasShop.Data.Models.Tree", b =>
                {
                    b.HasOne("ChristmasShop.Data.Models.CategoryTree", "CategoryTree")
                        .WithMany("trees")
                        .HasForeignKey("CategoryTreeid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ChristmasShop.Data.Models.User", b =>
                {
                    b.HasOne("ChristmasShop.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
